{"version":3,"file":"static/js/102.5649c80c.chunk.js","mappings":"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","sources":["manager/page/AllProduct/AllProduct.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as Realm from 'realm-web';\r\nimport Form from '@rjsf/core';\r\nimport validator from '@rjsf/validator-ajv8';\r\nimport './Myform.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst schema={\r\n  \"title\": \"Thông tin sản phẩm\",\r\n  \"type\": \"object\",\r\n  \"required\": [\r\n    \"productType\",\r\n    \"StartPrice\",\r\n    \"EndPrice\"\r\n  ],\r\n  \"properties\": {\r\n    \"productType\": {\r\n      \"type\": \"string\",\r\n      \"title\": \"Loại sản phẩm\",\r\n      \"enum\": [\r\n        \"Phôi thẻ trắng\",\r\n        \"Thẻ bảo lãnh\",\r\n        \"Thẻ bệnh viện\",\r\n        \"Thẻ dán NFC\",\r\n        \"Thẻ danh thiếp\"\r\n      ]\r\n    },\r\n    \"StartPrice\": {\r\n      \"title\": \"Giá từ\",\r\n      \"type\": \"number\",\r\n      \"enum\": [\r\n        10,\r\n        20,\r\n        30,\r\n        40,\r\n        50,\r\n        60\r\n      ]\r\n    },\r\n    \"EndPrice\": {\r\n      \"title\": \"Tới\",\r\n      \"type\": \"number\",\r\n      \"enum\": [\r\n        60,\r\n        70,\r\n        80,\r\n        90,\r\n        100\r\n      ]\r\n    }\r\n  }\r\n}\r\nconst AllProduct = () => {\r\n  const app = new Realm.App({ id: process.env.REACT_APP_KEY });\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [user, setUser] = useState();\r\n  const [jsonSchema, setjsonSchema] = useState({});\r\n  const [uiSchema, setuiSchema] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    refreshAccessToken();\r\n  }, []);\r\n\r\n  const refreshAccessToken = async () => {\r\n    try {\r\n      if (!app.currentUser?.accessToken) {\r\n        navigate('/managerofinan/login');\r\n      }\r\n      await app?.currentUser?.refreshAccessToken();\r\n      setUser(app?.currentUser);\r\n    } catch (error) {\r\n      if (!app.currentUser?.accessToken) {\r\n        navigate('/managerofinan/login');\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [app.currentUser]); // Thêm app.currentUser vào mảng dependency để useEffect được gọi lại khi currentUser thay đổi\r\n\r\n  const fetchData = async () => {\r\n    const FunctionName = 'form';\r\n    const functionName = 'UseModule';\r\n    const arg = ['Cart_Module', app?.currentUser?.id];\r\n    try {\r\n      await app?.currentUser?.callFunction(functionName, ...arg);\r\n      const findCart = await app?.currentUser?.callFunction(FunctionName);\r\n      console.log(findCart);\r\n      setjsonSchema(findCart[0]?.public?.input?.jsonSchema);\r\n      setProducts(findCart[0]?.public?.output?.jsonData?.products);\r\n      setUser(app.currentUser);\r\n      setuiSchema(findCart[0]?.public?.input?.uiSchema);\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n   \r\n  };\r\n\r\n  const handleSubmit = async (formData) => {\r\n    const FunctionName = 'QueryProducts';\r\n    const args = [formData.formData, app?.currentUser?.id];\r\n\r\n    try {\r\n      const result = await app?.currentUser?.callFunction(FunctionName, ...args);\r\n      fetchData();\r\n      console.log(result);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <>\r\n          {jsonSchema && uiSchema && (\r\n            <div className=\"container mx-auto p-4 relative\">\r\n              <div className=\"mb-4\">\r\n                <div className=\"flex justify-center\">\r\n                  <Form\r\n                    className=\"w-full max-w-md p-8 rounded-lg shadow-lg\"\r\n                    validator={validator}\r\n                    schema={jsonSchema}\r\n                    uiSchema={uiSchema}\r\n                    onSubmit={handleSubmit}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {products.length > 0 && ( // Thêm kiểm tra products trước khi map\r\n            <table className=\"border-collapse border border-green-800 w-full\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"border border-green-600 px-4 py-2\">Tên sản phẩm</th>\r\n                  <th className=\"border border-green-600 px-4 py-2\">Loại sản phẩm</th>\r\n                  <th className=\"border border-green-600 px-4 py-2\">Giá mua</th>\r\n                  <th className=\"border border-green-600 px-4 py-2\">Giá bán</th>\r\n                  <th className=\"border border-green-600 px-4 py-2\">Số lượng</th>\r\n                  <th className=\"border border-green-600 px-4 py-2\">Ngày nhập</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {products.map((product, index) => (\r\n                  <tr key={index}>\r\n                    <td className=\"border border-green-600 px-4 py-2\">{product.productName}</td>\r\n                    <td className=\"border border-green-600 px-4 py-2\">{product.productType}</td>\r\n                    <td className=\"border border-green-600 px-4 py-2\">{product.purchasePrice}</td>\r\n                    <td className=\"border border-green-600 px-4 py-2\">{product.sellingPrice}</td>\r\n                    <td className=\"border border-green-600 px-4 py-2\">{product.quantity}</td>\r\n                    <td className=\"border border-green-600 px-4 py-2\">\r\n                      {product.dateImported.year}/{product.dateImported.month}/{product.dateImported.day}/\r\n                      {product.dateImported.hour} {product.dateImported.period}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div> Bạn phải đăng nhập đã nhé</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllProduct;\r\n"],"names":["AllProduct","app","Realm","id","process","products","setProducts","useState","user","setUser","jsonSchema","setjsonSchema","uiSchema","setuiSchema","navigate","useNavigate","useEffect","refreshAccessToken","async","_app$currentUser","_app$currentUser2","currentUser","accessToken","error","_app$currentUser3","fetchData","_app$currentUser4","arg","_app$currentUser5","_app$currentUser6","_findCart$","_findCart$$public","_findCart$$public$inp","_findCart$2","_findCart$2$public","_findCart$2$public$ou","_findCart$2$public$ou2","_findCart$3","_findCart$3$public","_findCart$3$public$in","callFunction","findCart","console","log","public","input","output","jsonData","_jsx","_Fragment","children","_jsxs","className","Form","validator","schema","onSubmit","_app$currentUser7","args","formData","_app$currentUser8","result","length","map","product","index","productName","productType","purchasePrice","sellingPrice","quantity","dateImported","year","month","day","hour","period"],"sourceRoot":""}