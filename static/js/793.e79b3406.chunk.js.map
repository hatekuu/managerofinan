{"version":3,"file":"static/js/793.e79b3406.chunk.js","mappings":"uKAIA,MAqGA,EArGiBA,KACf,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAiBC,IAAsBJ,EAAAA,EAAAA,UAAS,KAChDK,EAAWC,IAAgBN,EAAAA,EAAAA,WAAS,IACpCO,EAAoBC,IAAyBR,EAAAA,EAAAA,UAAS,MA+B7D,OACES,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4DAA2DC,UACxEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6DAA4DC,SAAA,EACzEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sCAAqCC,SAAC,0BAEpDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,6CAA6CG,QAAQ,QAAOF,SAAC,YAG9EF,EAAAA,EAAAA,KAAA,SACEC,UAAU,6FACVI,KAAK,OACLC,MAAOjB,EACPkB,SAAWC,GAAMlB,EAASkB,EAAEC,OAAOH,aAIvCH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,6CAA6CG,QAAQ,WAAUF,SAAC,yBAGjFF,EAAAA,EAAAA,KAAA,SACEC,UAAU,6FACVI,KAAK,WACLC,MAAOd,EACPe,SAAWC,GAAMf,EAAYe,EAAEC,OAAOH,aAI1CH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,6CAA6CG,QAAQ,kBAAiBF,SAAC,0CAGxFF,EAAAA,EAAAA,KAAA,SACEC,UAAU,6FACVI,KAAK,WACLC,MAAOZ,EACPa,SAAWC,GAAMb,EAAmBa,EAAEC,OAAOH,aAIjDN,EAAAA,EAAAA,KAAA,UACEC,UAAS,uGAAAS,OACPd,EAAY,gCAAkC,IAEhDe,QA1EaC,UACnB,GAAIhB,EACF,OAGFC,GAAa,GAEb,MAAMgB,EAAM,IAAIC,EAAAA,GAAU,CAAEC,GAAIC,iCAGhC,GAAIxB,IAAaE,EAGf,OAFAK,EAAsB,gCACtBF,GAAa,GAIf,UACQgB,EAAII,kBAAkBC,aAAa,CAAE7B,QAAOG,aAClDO,EAAsB,2BACxB,CAAE,MAAOoB,GACP,MAAMC,EAAeD,EAAMA,MACrBE,EAAyBD,EAAaE,OAAO,GAAGC,cAAgBH,EAAaI,MAAM,GAC3FC,MAAMJ,GACJtB,EAAsB,uBACxB,CAAC,QACCF,GAAa,EACf,GAiDM6B,SAAU9B,EAAUM,SAEnBN,EAAY,oCAAoB,yBAGlCE,IACCE,EAAAA,EAAAA,KAAA,KAAGC,UAAS,QAAAS,OAAiC,6BAAvBZ,EAAoD,iBAAmB,gBAAiBI,SAC3GJ,KAILK,EAAAA,EAAAA,MAAA,KAAGF,UAAU,mBAAkBC,SAAA,CAAC,wCACbF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACC,GAAG,uBAAuB3B,UAAU,kBAAiBC,SAAC,kDAG7E,C","sources":["routers/userConfig/interact/register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Realm from \"realm-web\";\r\n\r\nconst Register = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [registrationStatus, setRegistrationStatus] = useState(null);\r\n\r\n  const registerUser = async () => {\r\n    if (isLoading) {\r\n      return; // Tránh nhấn nút nhiều lần trong khi đang xử lý\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const app = new Realm.App({ id: process.env.REACT_APP_KEY });\r\n\r\n    // Kiểm tra xem mật khẩu và mật khẩu xác nhận có khớp nhau không\r\n    if (password !== confirmPassword) {\r\n      setRegistrationStatus(\"Passwords do not match.\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await app.emailPasswordAuth.registerUser({ email, password });\r\n      setRegistrationStatus(\"Registration successful!\");\r\n    } catch (error) {\r\n      const errorMessage = error.error;\r\n      const uppercasedErrorMessage = errorMessage.charAt(0).toUpperCase() + errorMessage.slice(1);\r\n    alert(uppercasedErrorMessage);\r\n      setRegistrationStatus(\"Registration failed!\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n      <div className=\"bg-white p-8 rounded shadow-md w-96 border border-gray-300\">\r\n        <h2 className=\"text-2xl font-bold mb-4 text-center\">Đăng Ký</h2>\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\r\n            Email:\r\n          </label>\r\n          <input\r\n            className=\"w-full px-3 py-2 border rounded border-gray-300 focus:outline-none focus:border-indigo-500\"\r\n            type=\"text\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n            Mật khẩu:\r\n          </label>\r\n          <input\r\n            className=\"w-full px-3 py-2 border rounded border-gray-300 focus:outline-none focus:border-indigo-500\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"confirmPassword\">\r\n            Xác nhận mật khẩu:\r\n          </label>\r\n          <input\r\n            className=\"w-full px-3 py-2 border rounded border-gray-300 focus:outline-none focus:border-indigo-500\"\r\n            type=\"password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          className={`w-full bg-indigo-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ${\r\n            isLoading ? 'opacity-50 cursor-not-allowed' : ''\r\n          }`}\r\n          onClick={registerUser}\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? 'Đang đăng ký...' : 'Đăng ký'}\r\n        </button>\r\n\r\n        {registrationStatus && (\r\n          <p className={`mt-4 ${registrationStatus === \"Registration successful!\" ? \"text-green-500\" : \"text-red-500\"}`}>\r\n            {registrationStatus}\r\n          </p>\r\n        )}\r\n\r\n        <p className=\"mt-4 text-center\">\r\n          Đã có tài khoản? <Link to=\"/managerofinan/login\" className=\"text-indigo-500\">Quay lại đăng nhập</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["Register","email","setEmail","useState","password","setPassword","confirmPassword","setConfirmPassword","isLoading","setIsLoading","registrationStatus","setRegistrationStatus","_jsx","className","children","_jsxs","htmlFor","type","value","onChange","e","target","concat","onClick","async","app","Realm","id","process","emailPasswordAuth","registerUser","error","errorMessage","uppercasedErrorMessage","charAt","toUpperCase","slice","alert","disabled","Link","to"],"sourceRoot":""}